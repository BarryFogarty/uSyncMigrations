@inherits Umbraco.Web.Mvc.UmbracoViewPage<SiftLibrary.Models.SearchResultNodes>
@using System.Text.RegularExpressions
@{
    var newsItems = Model.Nodes.Select(n => (NewsItem)n);
    IPublishedContent fillerImage = null;

    var imagesFolder = Umbraco.MediaAtRoot().Where(m => m.Name == "Images").FirstOrDefault();
    if (imagesFolder != null)
    {
        var generalCampusUseFolder = imagesFolder.Children(m => m.Name == "Campus General Use").FirstOrDefault();
        if (generalCampusUseFolder != null)
        {
            fillerImage = generalCampusUseFolder.Children(m => m.Name == "Qmu Filler Thumb").FirstOrDefault();
        }
    }
}

<div class="search-form">
    <div class="search-paging">
        @Html.Partial("_SiftQmuPagination", Model)
    </div>
</div>

<div class="filter-grid no-padding-grid row">

    @foreach (var newsItem in newsItems)
    {
        <div class="filter-item blog-item col-sm-6 col-lg-4 mb-5">
            <div class="d-flex h-100 accented-boxes">

                <div class="box w-100">

                    <div class="image">
                        <a href="@newsItem.Url()">
                            @if (newsItem.AdSpotImage != null)
                            {
                                <img src="@newsItem.AdSpotImage.Url()" alt="@newsItem.AdSpotImage.Value("AltText")" />
                            }
                            else if (fillerImage != null)
                            {
                                <img src="@fillerImage.Url()" alt="@fillerImage.Value("AltText")" />
                            }
                            <div class="overlay-text lh-sm">
                                @newsItem.DisplayTitle
                            </div>
                        </a>
                    </div>

                    <div class="text">
                        <p><time>@(newsItem.DatePosted.ToString("dd MMMM yyyy"))</time></p>
                        @{
                            if (newsItem.Introduction != null)
                            {
                                var intro = newsItem.Introduction.ToString();
                                string summary = string.Empty;

                                int characterCount = 100;

                                summary = Regex.Replace(intro, @"<[^>]+>|&nbsp;", "").Trim();

                                if (summary.Length > characterCount)
                                {
                                    char[] charsToTrim = { ',', '.', '?', '!', ' ' };
                                    summary = Html.TruncateByWords(summary, 16, false).ToString().Trim(charsToTrim) ?? summary;
                                }
                                summary += string.Format(" <a href=\"" + @newsItem.Url() + "\" aria-label=\"read more about " + @newsItem.DisplayTitle + "\"><strong>read more</strong></a>");
                                <p>@Html.Raw(summary)</p>
                            }
                        }

                    </div>

                </div>
            </div>
        </div>
    }

</div>

<div class="search-form">
    <div class="search-paging">
        @Html.Partial("_SiftQmuPagination", Model)
    </div>
</div>

