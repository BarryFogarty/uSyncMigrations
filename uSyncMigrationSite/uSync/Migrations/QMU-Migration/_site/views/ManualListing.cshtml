@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.ManualListing>
@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web
@using System.Text.RegularExpressions
@{
    Layout = "Master.cshtml";
}

@Html.CachedPartial("bannerItem", Model, QMUCloud.Core.QMUConstants.PartialCachedSeconds, true)

<main role="main" class="main-content">
    <div class="container">
        <div class="column-layout">
            <div class="left" id="left" tabindex="-1">
                @Html.CachedPartial("breadcrumb", Model, QMUCloud.Core.QMUConstants.PartialCachedSeconds, true)
                @Html.CachedPartial("shareUpper", Model, QMUCloud.Core.QMUConstants.PartialCachedSeconds, true)
                <h1>@Model.DisplayTitle</h1>

                <div class="news-list">
                    @if (Model.ContentItems != null)
                    {
                        foreach (var item in Model.ContentItems)
                        {
                            var itemImage = item.Value<IPublishedContent>("adSpotImage");
                            <div class="news-item">
                                <a href="@item.Url()" class="image" aria-label="@item.Value("displayTitle")">
                                    @if (item.Value<IPublishedContent>("adSpotImage") != null)
                                    {
                                        var imageAlt = itemImage.Value<string>("altText");
                                        <img src="@itemImage.Url()" alt="@imageAlt" class="listingLink" />
                                    }
                                    else
                                    {
                                        <img src="~/Images/ad-spot-temp.png" alt="QMU preview image" class="listingLink" />
                                    }
                                </a>
                                <a href="@item.Url()">
                                    @item.Value("displayTitle")
                                </a>
                                @if (!string.IsNullOrEmpty(item.Value<string>("Introduction")))
                                {
                                    var intro = item.Value("Introduction").ToString();

                                    string summary = string.Empty;

                                    int characterCount = 100;

                                    summary = Regex.Replace(intro, @"<[^>]+>|&nbsp;", "").Truncate(characterCount).Trim();

                                    summary += string.Format(" <a href=\"" + @item.Url() + "\" aria-label=\"read more about " + @item.Value("displayTitle") + "\"><strong>read more</strong></a>");
                                    <p>@Html.Raw(summary)</p>
                                }
                            </div>
                        }
                    }

                </div>
            </div>
            <div class="right">
            </div>
        </div>
    </div>
</main>
@Html.CachedPartial("_relatedContent", Model, QMUCloud.Core.QMUConstants.PartialCachedSeconds, true)